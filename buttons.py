from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, \
    ReplyKeyboardRemove, WebAppInfo

cash = KeyboardButton('–ù–∞–ª–∏—á–Ω—ã–µ')
card = KeyboardButton('–ö–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω')
ok = KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
cart_cat = KeyboardButton('–ö–æ—Ä–∑–∏–Ω–∞')

back = KeyboardButton('–ù–∞–∑–∞–¥')
order = KeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å')
menu = KeyboardButton('–ú–∞–≥–∞–∑–∏–Ωüõç')
back_to_cat = KeyboardButton('<< –í–µ—Ä–Ω—É—Ç—å—Å—è')
message = KeyboardButton('–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞—Ä–æ–¥—É')
cl_cart = KeyboardButton('–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É')

help = KeyboardButton('–ü–æ–º–æ—â—åüÜò')
sale = KeyboardButton('–ê–∫—Ü–∏–∏')
ad_category = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
del_dish_b = KeyboardButton('C–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤')
discount = KeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫–∏–¥–∫—É')
expenses = KeyboardButton('–í–Ω–µ—Å—Ç–∏ —Ä–∞—Å—Ö–æ–¥—ã')
ad_dish = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
view_cats = KeyboardButton('–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π')
view_dishes = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
min_price = KeyboardButton('–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑')
number = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä', request_contact=True)

main = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True,row_width=1).add(cart_cat,sale,menu,help)

order_btn = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
order_btn.row(order, back_to_cat, cl_cart)

main_btn = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
main_btn.row(back)
back_cat = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
back_cat.row(back_to_cat)

admin_buttons = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
admin_buttons.add(view_cats, min_price, del_dish_b, message, discount,sale)

admin_cats_buttons = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
admin_cats_buttons.row(ad_category, back)

cat_list = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

ready_button = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
ready_button.row(ok)

admin_dishes_buttons = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
admin_dishes_buttons.row(back)
user_dishes_buttons = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
user_dishes_buttons.row(back_to_cat)


async def create_buttons_types(lst, user_role):
    cats = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    if user_role == 'admin':
        for name in lst:
            if name not in str(admin_cats_buttons):
                button = KeyboardButton(text=f'{name}')
                cats.row(button)
        else:
            cats.row(ad_category, back)
            return cats
    else:
        for name in lst:
            if name not in str(cat_list):
                button = KeyboardButton(text=f'{name}')
                cat_list.row(button)
        else:
            if "–ö–æ—Ä–∑–∏–Ω–∞" not in str(cat_list):
                cat_list.row(cart_cat)
            return cat_list


async def create_buttons_dishes(lst):
    admin_dishes_but = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for name in lst:
        if name not in str(admin_dishes_buttons):
            button = KeyboardButton(text=f'{name}')
            admin_dishes_but.row(button)
    else:
        admin_dishes_but.row(back, view_dishes)
        return admin_dishes_but


async def user_dishes_buttons(lst):
    user_dishes_but = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for name in lst:
        if name not in str(admin_dishes_buttons):
            button = KeyboardButton(text=f'{name}')
            user_dishes_but.row(button)
    else:
        user_dishes_but.row(back)
        return user_dishes_but
